var htmlModule = (function () {
    var properties = {
        listingWrapper: '#id_listing_body',
        hiddenRow: '.hidden-row',
        activeTr: '.active-tr',
        row: '.row',
        noRecord: '.no-record-js',
        detailContent: '#id_detail_content',
        opeartionListId: 'opration_id_',
        cache: {},
        temporaryOperationChecked:[],
        firstDashBoardLoad: 0,
        load_document_view: false
    }
    function resetCache() {
        properties.cache = {};
    }
    function showBlankRow() {
        var removeEle = properties.listingWrapper + ' ' + properties.noRecord;
        if (removeEle.length) {
            removeElement(removeEle);
        }
        var ele = properties.listingWrapper + ' ' + properties.row;
        removeClass(ele, 'active-tr');
        var ele = properties.listingWrapper + ' ' + properties.hiddenRow;
        removeClass(ele, 'hide border-btn-0');
        addClass(ele, 'active-tr');
    }
    function resetBlankRow() {
        var ele = properties.listingWrapper + ' ' + properties.hiddenRow;
        addClass(ele, 'hide empty-tr');
        removeClass(ele, 'active-tr');
    }
    function fillBlankRow() {
        $('.autogenerated:visible').each(function () {
            var pId = $(this).data('id');
            var val = $(this).val();
            var listEle = $(properties.hiddenRow).find('[data-statusid="' + pId + '"]');
            if (listEle.length) {
                removeClass(properties.hiddenRow, 'empty-tr');
                listEle.text(val);
            }
        });
    }
    function manageActiveList(wrapper) {
        var activeTr = wrapper.find('div.active');
        if (activeTr.length) {
            activeTr.remove();
            var firstTr = wrapper.find('[id^=' + properties.opeartionListId + ']:first');
            if (firstTr.length) {
                firstTr.trigger('click');
            } else {
                triggerActiveMenu();
            }
        } else {
            triggerActiveMenu();
        }
    }
    function triggerActiveMenu() {
        $('#page_plugin_menu_item_list ul.item-list [data-statusid].active').find('[data-title]').trigger('click');
    }
    function removeElement(ele) {
        $(ele).remove();
    }
    function removeClass(element, className) {
        $(element).removeClass(className);
    }
    function addClass(element, className) {
        $(element).addClass(className);
    }
    function actionAfterCofirmationPopup(menutype) {
        if ($.trim(menutype) == 'operations') {
            $('#id_listing_operation .active').trigger('click');
            //$('#operation-confirmation-popup').modal('show');
        } else {
            if ($('#id_listing_body .active-tr:not(.no-record-js)').length) {
                if ($('#id_listing_body .active-tr').hasClass('hidden-row')) {
                    if ($('#id_listing_body .row:visible:not(".hidden-row")').length) {
                        $('#id_listing_body .row:visible:not(".hidden-row"):first').trigger('click');
                        //resetBlankRow();
                    } else {
                        $('.item-list li.active a').trigger('click');
                    }
                } else {
                    $('#id_listing_body .active-tr').trigger('click');
                }
            } else {
                $('.item-list li.active a').trigger('click');
            }
        }
    }
    function getFormData() {
        var formEle = $(properties.detailContent).find('form:visible');
        var formData = formEle.find(':input:visible').serialize();
        if (formEle.find(':file:visible').length) {
            var fileName = formEle.find(':file:visible').attr('name');
            var fileVal = formEle.find(':file:visible').val();
            formData = formData + '&' + fileName + '=' + fileVal;
        }
        return formData;
    }
    function checkFormState(formObj) {
        if (!formObj.length) {
            resetCache();
            return false;
        }
        var curFormData = getFormData();
        if (properties.cache.operatioForm) {
            if (properties.cache.operatioForm != curFormData) {
                return true;
            }
        }
    }

    function updateListWithSingleVal(wrapper,key,value,canClick){
        if(value){
            $(wrapper).find("div[data-statusid='" + key + "']").text(value);
        }
        if(canClick === 1){
            $(wrapper).trigger('click');
        }
    }
    /**
     * [hasGoToAppOneButton description: Checks "Go To AppOne" button exists or not ]
     * @param  {Dom Obj}  wrapper []
     * @return {Boolean}         [true/false]
     */
    function hasGoToAppOneButton(wrapper) {
        return wrapper.find('button[onclick="loadAppOneLogin()"]').length;
    }

    /**
     * [hasFilledElement description: Checks at least one element has text available ]
     * @param  {Dom Obj}  wrapper [description]
     * @return {Boolean}         [true/false]
     */
    function hasFilledElement(wrapper) {
        var found = false;
        wrapper.find('.list-view-detail').each(function() {
            var text = $.trim($(this).text()).toLowerCase();
            if( text != '' && text != 'n/a') {
                found = true;
                return true;
            }
        });
        return found;
    }

    function _init() {
        resetCache();
    }
    _init();
    return{
        properties: properties,
        showBlankRow: showBlankRow,
        actionAfterCofirmationPopup: actionAfterCofirmationPopup,
        resetBlankRow: resetBlankRow,
        fillBlankRow: fillBlankRow,
        checkFormState: checkFormState,
        getFormData: getFormData,
        resetCache: resetCache,
        triggerActiveMenu: triggerActiveMenu,
        manageActiveList: manageActiveList,
        updateListWithSingleVal: updateListWithSingleVal,
        getLoaderHtml: function() {
            return $("#loader-template").html();
        },
        /**
         * collapseSectionIfEmpty: When operation detail loads then collapse those sections where there is no data in any of its field.
         */
        collapseSectionIfEmpty: function(container, section_toggle_selector, mode) {

            var containerObj = $("#id_detail_content").find(container);
            var section_toggle_btns = containerObj.find(section_toggle_selector);
            var condition1, condition2, condition3;
            section_toggle_btns.each(function() {
                var collapse_element = $(this).next();
                condition3 = collapse_element.is(':visible');

                if(mode == 'view') {
                    condition1 = hasGoToAppOneButton(collapse_element);
                    condition2 = hasFilledElement(collapse_element);

                    if(condition1 || condition2) {
                        collapse_element.show();
                        $(this).find('i.fa').addClass('fa-angle-down').removeClass('fa-angle-up');
                    } else {
                        collapse_element.hide();
                        $(this).find('i.fa').removeClass('fa-angle-down').addClass('fa-angle-up');
                    }
                } else {
                    // for "add/edit", show all sections expanded
                    collapse_element.show();
                    $(this).find('i.fa').addClass('fa-angle-down').removeClass('fa-angle-up');
                }

            });
        }
    }
})();
